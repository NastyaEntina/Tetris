[{"C:\\Documents\\Programs\\tetris\\src\\index.js":"1","C:\\Documents\\Programs\\tetris\\src\\App.js":"2","C:\\Documents\\Programs\\tetris\\src\\reportWebVitals.js":"3","C:\\Documents\\Programs\\tetris\\src\\components\\Tetris.js":"4","C:\\Documents\\Programs\\tetris\\src\\components\\Stage.js":"5","C:\\Documents\\Programs\\tetris\\src\\components\\StartButton.js":"6","C:\\Documents\\Programs\\tetris\\src\\components\\Display.js":"7","C:\\Documents\\Programs\\tetris\\src\\components\\Cell.js":"8","C:\\Documents\\Programs\\tetris\\src\\gameHelpers.js":"9","C:\\Documents\\Programs\\tetris\\src\\components\\styles\\StyledCell.js":"10","C:\\Documents\\Programs\\tetris\\src\\tetrominos.js":"11","C:\\Documents\\Programs\\tetris\\src\\components\\styles\\StyledTetris.js":"12","C:\\Documents\\Programs\\tetris\\src\\components\\styles\\StyledStage.js":"13","C:\\Documents\\Programs\\tetris\\src\\components\\styles\\StyledDisplay.js":"14","C:\\Documents\\Programs\\tetris\\src\\components\\styles\\StyledStartButton.js":"15","C:\\Documents\\Programs\\tetris\\src\\hooks\\usePlayer.js":"16","C:\\Documents\\Programs\\tetris\\src\\hooks\\useStage.js":"17","C:\\Documents\\Programs\\tetris\\src\\hooks\\useInterval.js":"18","C:\\Documents\\Programs\\tetris\\src\\hooks\\useGameStatus.js":"19"},{"size":455,"mtime":1610794386401,"results":"20","hashOfConfig":"21"},{"size":157,"mtime":1610022047647,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":3577,"mtime":1610798803642,"results":"24","hashOfConfig":"21"},{"size":332,"mtime":1610795241251,"results":"25","hashOfConfig":"21"},{"size":236,"mtime":1610450347753,"results":"26","hashOfConfig":"21"},{"size":215,"mtime":1610389296438,"results":"27","hashOfConfig":"21"},{"size":248,"mtime":1610798924257,"results":"28","hashOfConfig":"21"},{"size":1177,"mtime":1610465259469,"results":"29","hashOfConfig":"21"},{"size":461,"mtime":1610037733746,"results":"30","hashOfConfig":"21"},{"size":1408,"mtime":1610031631192,"results":"31","hashOfConfig":"21"},{"size":545,"mtime":1610036382945,"results":"32","hashOfConfig":"21"},{"size":403,"mtime":1610037751298,"results":"33","hashOfConfig":"21"},{"size":462,"mtime":1610391651653,"results":"34","hashOfConfig":"21"},{"size":414,"mtime":1610391722691,"results":"35","hashOfConfig":"21"},{"size":1880,"mtime":1610471580843,"results":"36","hashOfConfig":"21"},{"size":1728,"mtime":1610795389056,"results":"37","hashOfConfig":"21"},{"size":491,"mtime":1610021050197,"results":"38","hashOfConfig":"21"},{"size":777,"mtime":1610798293317,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l4dpin",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Documents\\Programs\\tetris\\src\\index.js",[],"C:\\Documents\\Programs\\tetris\\src\\App.js",[],["81","82"],"C:\\Documents\\Programs\\tetris\\src\\reportWebVitals.js",[],"C:\\Documents\\Programs\\tetris\\src\\components\\Tetris.js",[],"C:\\Documents\\Programs\\tetris\\src\\components\\Stage.js",[],"C:\\Documents\\Programs\\tetris\\src\\components\\StartButton.js",[],"C:\\Documents\\Programs\\tetris\\src\\components\\Display.js",[],"C:\\Documents\\Programs\\tetris\\src\\components\\Cell.js",[],"C:\\Documents\\Programs\\tetris\\src\\gameHelpers.js",[],"C:\\Documents\\Programs\\tetris\\src\\components\\styles\\StyledCell.js",[],"C:\\Documents\\Programs\\tetris\\src\\tetrominos.js",[],"C:\\Documents\\Programs\\tetris\\src\\components\\styles\\StyledTetris.js",[],"C:\\Documents\\Programs\\tetris\\src\\components\\styles\\StyledStage.js",[],"C:\\Documents\\Programs\\tetris\\src\\components\\styles\\StyledDisplay.js",[],"C:\\Documents\\Programs\\tetris\\src\\components\\styles\\StyledStartButton.js",[],"C:\\Documents\\Programs\\tetris\\src\\hooks\\usePlayer.js",["83"],"import {useState, useCallback} from 'react'\r\nimport { checkCollision, STAGE_HEIGHT, STAGE_WIDTH } from '../gameHelpers'\r\nimport {TETROMINOS, randomTetromino} from '../tetrominos'\r\n\r\nexport const usePlayer = () => {\r\n    const [player, setPlayer] = useState({\r\n        pos: {x:0, y:0},\r\n        tetromino: TETROMINOS[0].shape,\r\n        collided: false,\r\n    })\r\n\r\n    const rotate = (matrix, dir) => {\r\n        // make rows to become columns\r\n        const rotatedTetro = matrix.map((_, index) => \r\n            matrix.map(col => col[index]),\r\n        )\r\n        // reverse each row to get a rotated matrix\r\n        if (dir > 0) return rotatedTetro.map(row => row.reverse())\r\n        return rotatedTetro.reverse()\r\n    }\r\n\r\n    const playerRotate = (stage, dir) => {\r\n        const clonedPlayer = JSON.parse(JSON.stringify(player))\r\n        clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir)\r\n        const pos = clonedPlayer.pos.x\r\n        let offset = 1\r\n        while(checkCollision(clonedPlayer, stage, {x: 0, y: 0})) {\r\n            clonedPlayer.pos.x += offset\r\n            offset = -(offset + (offset > 0 ? 1 : -1))\r\n            if (offset > clonedPlayer.tetromino[0].length) {\r\n                rotate(clonedPlayer.tetromino, -dir)\r\n                clonedPlayer.pos.x = pos\r\n                return\r\n            }\r\n        }\r\n        setPlayer(clonedPlayer)\r\n    }\r\n\r\n    const updatePlayerPos = ({x, y, collided}) => {\r\n        setPlayer(prev => ({\r\n            ...prev,\r\n            pos: {x: (prev.pos.x += x), y: (prev.pos.y += y)},\r\n            collided,\r\n        }))\r\n    }\r\n\r\n    const resetPlayer = useCallback(() => {\r\n        setPlayer({\r\n            pos: {x: STAGE_WIDTH / 2-2, y: 0},\r\n            tetromino: randomTetromino().shape,\r\n            collided: false,\r\n        })\r\n    }, [])\r\n\r\n    return [player, updatePlayerPos, resetPlayer, playerRotate]\r\n}","C:\\Documents\\Programs\\tetris\\src\\hooks\\useStage.js",["84"],"import {useState, useEffect} from 'react'\r\nimport {createStage} from '../gameHelpers'\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n    const [stage, setStage] = useState(createStage())\r\n    const [rowsCleared, setRowsCleared] = useState(0)\r\n\r\n    useEffect(() => {\r\n        setRowsCleared(0)\r\n        const sweepRows = newStage => \r\n            newStage.reduce((ack, row) => {\r\n                if (row.findIndex(cell => cell[0] === 0) === -1) {\r\n                    setRowsCleared(prev => prev + 1)\r\n                    ack.unshift(new Array(newStage[0].length).fill([0, 'clear']))\r\n                    return ack\r\n                }\r\n                ack.push(row)\r\n                return ack\r\n            }, [])\r\n        \r\n        const updateStage = prevStage => {\r\n            // Flush the stage\r\n            const newStage = prevStage.map(row => \r\n                row.map(cell => (cell[1] === 'clear' ? [0, 'clear']: cell)),\r\n            )\r\n            //Draw tetromino\r\n            player.tetromino.forEach((row, y) => {\r\n                row.forEach((value, x) => {\r\n                    if (value != 0) {\r\n                        newStage[y + player.pos.y][x + player.pos.x] = [\r\n                            value,\r\n                            `${player.collided ? 'merged': 'clear'}`\r\n                        ]\r\n                    }\r\n                })\r\n            })\r\n            // check if we collided\r\n            if (player.collided) {\r\n                resetPlayer()\r\n                return sweepRows(newStage)\r\n            }            \r\n            return newStage\r\n        }\r\n\r\n        setStage(prev => updateStage(prev))\r\n    }, [player, resetPlayer])\r\n\r\n    return [stage, setStage, rowsCleared] \r\n}\r\n","C:\\Documents\\Programs\\tetris\\src\\hooks\\useInterval.js",[],"C:\\Documents\\Programs\\tetris\\src\\hooks\\useGameStatus.js",["85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":2,"column":26,"nodeType":"92","messageId":"93","endLine":2,"endColumn":38},{"ruleId":"94","severity":1,"message":"95","line":29,"column":31,"nodeType":"96","messageId":"97","endLine":29,"endColumn":33},{"ruleId":"98","severity":1,"message":"99","line":8,"column":11,"nodeType":"100","endLine":8,"endColumn":44},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'STAGE_HEIGHT' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","The 'linePoints' array makes the dependencies of useCallback Hook (at line 17) change on every render. Move it inside the useCallback callback. Alternatively, wrap the initialization of 'linePoints' in its own useMemo() Hook.","VariableDeclarator","no-global-assign","no-unsafe-negation"]