{"version":3,"sources":["gameHelpers.js","components/styles/StyledCell.js","tetrominos.js","components/Cell.js","components/styles/StyledStage.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","img/bg.png","components/styles/StyledTetris.js","hooks/useStage.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","reportWebVitals.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledCell","styled","div","props","color","type","TETROMINOS","0","shape","I","J","L","O","S","T","Z","randomTetromino","tetrominos","randTetromino","Math","floor","random","Cell","React","memo","StyledStage","height","width","Stage","map","row","cell","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","StyledTetrisWrapper","bgImage","StyledTetris","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","console","log","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f283e200.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12\r\nexport const STAGE_HEIGHT = 20\r\n\r\nexport const createStage = () =>\r\n    Array.from(Array(STAGE_HEIGHT), () =>\r\n        new Array(STAGE_WIDTH).fill([0, 'clear'])   \r\n    )\r\n\r\n    export const checkCollision = (player, stage, {x: moveX, y: moveY}) => {\r\n        for (let y = 0; y < player.tetromino.length; y += 1){\r\n            for (let x = 0 ; x < player.tetromino[y].length ; x += 1) {\r\n                // check that we're on tetromino cell \r\n                if (player.tetromino[y][x] !== 0) {\r\n                    if (\r\n                        // check our movement is inside the game area height\r\n                        !stage[y + player.pos.y + moveY] || \r\n                        // check our movement is inside the game area width\r\n                        !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\r\n                        // check that the cell we're moving to isn't set to clear\r\n                        stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== 'clear'\r\n                    ) { \r\n                        return true\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    }","import styled from 'styled-components'\r\n\r\nexport const StyledCell = styled.div`\r\n    width: auto;\r\n    background: rgba(${props => props.color}, 0.8);\r\n    border: ${props => (props.type === 0 ? '0px': '4px')} solid;\r\n    border-bottom-color : rgba(${props => props.color}, 0.1);\r\n    border-right-color : rgba(${props => props.color}, 1);\r\n    border-top-color : rgba(${props => props.color}, 1);\r\n    border-left-color : rgba(${props => props.color}, 0.3);\r\n`","export const TETROMINOS = {\r\n    0: { shape: [[0]], color: '0, 0, 0'},\r\n    I: {\r\n        shape: [\r\n            [0, 'I', 0, 0],\r\n            [0, 'I', 0, 0],\r\n            [0, 'I', 0, 0],\r\n            [0, 'I', 0, 0]\r\n        ],\r\n        color: '80, 227, 230'\r\n    },\r\n    J: {\r\n        shape: [\r\n            [0, 'J', 0],\r\n            [0, 'J', 0],\r\n            ['J', 'J', 0]\r\n        ],\r\n        color: '36, 95, 223'\r\n    },\r\n    L: {\r\n        shape: [\r\n            [0, 'L', 0],\r\n            [0, 'L', 0],\r\n            [0, 'L', 'L']\r\n        ],\r\n        color: '223, 173, 36'\r\n    },\r\n    O: {\r\n        shape: [\r\n            ['O', 'O'],\r\n            ['O', 'O'],\r\n        ],\r\n        color: '223, 217, 36'\r\n    },\r\n    S: {\r\n        shape: [\r\n            [0, 'S', 'S'],\r\n            ['S', 'S', 0],\r\n            [0, 0, 0],\r\n        ],\r\n        color: '48, 211, 56'\r\n    },\r\n    T: {\r\n        shape: [\r\n            [0, 0, 0],\r\n            ['T', 'T', 'T'],\r\n            [0, 'T', 0],\r\n        ],\r\n        color: '132, 61, 198'\r\n    },\r\n    Z: {\r\n        shape: [\r\n            ['Z', 'Z', 0],\r\n            [0, 'Z', 'Z'],\r\n            [0, 0, 0],\r\n        ],\r\n        color: '227, 78, 78'\r\n    },\r\n    \r\n}\r\n\r\nexport const randomTetromino = () => {\r\n    const tetrominos = 'IJLOSTZ'\r\n    const randTetromino = \r\n        tetrominos[Math.floor(Math.random() * tetrominos.length)]\r\n        return TETROMINOS[randTetromino]\r\n}","import React from 'react'\r\nimport {StyledCell} from './styles/StyledCell'\r\nimport {TETROMINOS} from '../tetrominos'\r\n\r\nconst Cell = ({ type }) => (\r\n    <StyledCell type={type} color={TETROMINOS[type].color} />\r\n)\r\n\r\nexport default React.memo(Cell)","import styled from 'styled-components'\r\n\r\nexport const StyledStage = styled.div`\r\n    display: grid;\r\n    grid-template-rows: repeat(\r\n        ${props => props.height},\r\n        calc(25vw / ${props => props.width})\r\n    );\r\n    grid-template-columns: repeat(${props => props.width}, 1fr);\r\n    grid-gap: 1px;\r\n    border: 2px #333 solid;\r\n    width: 100%;\r\n    max-width: 25vw;\r\n    background: #111;\r\n`","import React from 'react'\r\nimport Cell from './Cell'\r\nimport {StyledStage} from './styles/StyledStage';\r\n\r\nconst Stage = ({ stage }) => (\r\n    <StyledStage width={stage[0].length} height={stage.length}>\r\n        {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\r\n    </StyledStage>\r\n)\r\n\r\nexport default Stage","import styled from 'styled-components'\r\n\r\nexport const StyledDisplay = styled.div`\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 0 20px 0;\r\n    padding: 20px;\r\n    border: 4px solid #333;\r\n    min-height:  30px;\r\n    width: 100%;\r\n    border-radius: 20px;\r\n    color: ${props => (props.gameOver ? 'red': '#999')};\r\n    background: #000;\r\n    font-family: Pixel, Arial, Helvetica, sans-serif;\r\n    font-size: 0.8rem;\r\n`","import React from 'react'\r\nimport {StyledDisplay} from './styles/StyledDisplay'\r\n\r\nconst Display = ({ gameOver, text}) => (\r\n    <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\r\n)\r\n\r\nexport default Display","import styled from 'styled-components'\r\n\r\nexport const StyledStartButton = styled.button`\r\n    box-sizing: border-box;\r\n    margin: 0 0 20px 0;\r\n    padding: 20px;\r\n    min-height:  30px;\r\n    width: 100%;\r\n    border-radius: 20px;\r\n    border: none;\r\n    color: white;\r\n    background: #333;\r\n    font-family: Pixel, Arial, Helvetica, sans-serif;\r\n    font-size: 1rem;\r\n    outline: none;\r\n    cursor: pointer;\r\n`","import React from 'react'\r\nimport {StyledStartButton} from './styles/StyledStartButton'\r\n\r\nconst StartButton = ({ callback }) => (\r\n    <StyledStartButton onClick={callback}>StartGame</StyledStartButton>\r\n)\r\n\r\nexport default StartButton","export default __webpack_public_path__ + \"static/media/bg.d63cfd51.png\";","import styled from 'styled-components'\r\n\r\nimport bgImage from '../../img/bg.png'\r\n\r\nexport const StyledTetrisWrapper = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: url(${bgImage}) #000;\r\n    background-size: cover;\r\n    overflow: hidden;\r\n`\r\n\r\nexport const StyledTetris = styled.div`\r\n    display: flex;\r\n    align-items: flex-start;\r\n    padding: 40px;\r\n    margin: 0 auto;\r\n    max-width: 900px;\r\n\r\n    aside {\r\n        width: 100%;\r\n        max-width: 200px;\r\n        display: block;\r\n        padding: 0 20px;\r\n    }\r\n`","import {useState, useEffect} from 'react'\r\nimport {createStage} from '../gameHelpers'\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n    const [stage, setStage] = useState(createStage())\r\n    const [rowsCleared, setRowsCleared] = useState(0)\r\n\r\n    useEffect(() => {\r\n        setRowsCleared(0)\r\n        const sweepRows = newStage => \r\n            newStage.reduce((ack, row) => {\r\n                if (row.findIndex(cell => cell[0] === 0) === -1) {\r\n                    setRowsCleared(prev => prev + 1)\r\n                    ack.unshift(new Array(newStage[0].length).fill([0, 'clear']))\r\n                    return ack\r\n                }\r\n                ack.push(row)\r\n                return ack\r\n            }, [])\r\n        \r\n        const updateStage = prevStage => {\r\n            // Flush the stage\r\n            const newStage = prevStage.map(row => \r\n                row.map(cell => (cell[1] === 'clear' ? [0, 'clear']: cell)),\r\n            )\r\n            //Draw tetromino\r\n            player.tetromino.forEach((row, y) => {\r\n                row.forEach((value, x) => {\r\n                    if (value != 0) {\r\n                        newStage[y + player.pos.y][x + player.pos.x] = [\r\n                            value,\r\n                            `${player.collided ? 'merged': 'clear'}`\r\n                        ]\r\n                    }\r\n                })\r\n            })\r\n            // check if we collided\r\n            if (player.collided) {\r\n                resetPlayer()\r\n                return sweepRows(newStage)\r\n            }            \r\n            return newStage\r\n        }\r\n\r\n        setStage(prev => updateStage(prev))\r\n    }, [player, resetPlayer])\r\n\r\n    return [stage, setStage, rowsCleared] \r\n}\r\n","import React, {useState} from 'react'\r\n// Helpers\r\nimport {createStage, checkCollision} from '../gameHelpers'\r\n// Components\r\nimport Stage from './Stage'\r\nimport Display from './Display'\r\nimport StartButton from './StartButton'\r\n// Styled Components\r\nimport {StyledTetrisWrapper, StyledTetris} from './styles/StyledTetris'\r\n// Custom hooks\r\nimport {useInterval} from '../hooks/useInterval'\r\nimport {usePlayer} from '../hooks/usePlayer'\r\nimport {useStage} from '../hooks/useStage'\r\nimport {useGameStatus} from '../hooks/useGameStatus'\r\n\r\nconst Tetris = () => {\r\n    const [dropTime, setDropTime] = useState(null)\r\n    const [gameOver, setGameOver] = useState(false)\r\n\r\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer()\r\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer)\r\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared)\r\n\r\n    console.log('re-render')\r\n\r\n    const movePlayer = dir => {\r\n        if (!checkCollision(player, stage, {x: dir, y: 0})) {\r\n            updatePlayerPos({x: dir, y: 0})\r\n        }\r\n    }\r\n\r\n    const startGame = () => {\r\n        // Reset everything\r\n        setStage(createStage())\r\n        setDropTime(1000)\r\n        resetPlayer()\r\n        setGameOver(false)\r\n        setScore(0)\r\n        setRows(0)\r\n        setLevel(0)\r\n    }\r\n\r\n    const drop = () => {\r\n        //Increase level when player has cleared 10 rows\r\n        if (rows > (level + 1)* 10) {\r\n            setLevel(prev => prev + 1)\r\n            // Increase the speed:\r\n            setDropTime(1000 / (level + 1) + 200)\r\n        }\r\n        if (!checkCollision(player, stage, {x: 0, y: 1})) {\r\n            updatePlayerPos({x: 0, y: 1, collided: false})\r\n        } else {\r\n            // game Over\r\n            if (player.pos.y < 1) {\r\n                console.log('Game over')\r\n                setGameOver(true)\r\n                setDropTime(null)\r\n            }\r\n            updatePlayerPos({x: 0, y: 0, collided: true})\r\n        }\r\n    }\r\n\r\n    const keyUp = ({ keyCode }) => {\r\n        if (!gameOver) {\r\n            if (keyCode === 40) {\r\n                setDropTime(100 / (level + 1) + 200)\r\n            }\r\n        }\r\n    }\r\n\r\n    const dropPlayer = () => {\r\n        setDropTime(null)\r\n        drop()\r\n    }\r\n\r\n    const move = ({keyCode}) => {\r\n        if (!gameOver) {\r\n            if (keyCode === 37) {\r\n                movePlayer(-1)\r\n            } else if (keyCode === 39) {\r\n                movePlayer(1)\r\n            } else if (keyCode === 40) {\r\n                dropPlayer()\r\n            } else if (keyCode === 38) {\r\n                playerRotate(stage, 1)\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    useInterval(() => {\r\n        drop()\r\n    }, dropTime)\r\n\r\n    return (\r\n        <StyledTetrisWrapper role='button' tabIndex='0' onKeyDown={e => move(e)} onKeyUp={keyUp}>\r\n            <StyledTetris>\r\n                <Stage stage={stage}/>\r\n                <aside>\r\n                    {gameOver ? (\r\n                        <Display gameOver={gameOver} text='Game Over'/>\r\n                    ): (\r\n                        <div>\r\n                            <Display text={`Score: ${score}`} />\r\n                            <Display text={`Rows: ${rows}`} />\r\n                            <Display text={`Level: ${level}`} />\r\n                        </div>                        \r\n                    )}\r\n                    <StartButton callback={startGame}/>\r\n                </aside>\r\n            </StyledTetris>            \r\n        </StyledTetrisWrapper>\r\n    )\r\n}\r\n\r\nexport default Tetris","import {useState, useCallback} from 'react'\r\nimport { checkCollision, STAGE_HEIGHT, STAGE_WIDTH } from '../gameHelpers'\r\nimport {TETROMINOS, randomTetromino} from '../tetrominos'\r\n\r\nexport const usePlayer = () => {\r\n    const [player, setPlayer] = useState({\r\n        pos: {x:0, y:0},\r\n        tetromino: TETROMINOS[0].shape,\r\n        collided: false,\r\n    })\r\n\r\n    const rotate = (matrix, dir) => {\r\n        // make rows to become columns\r\n        const rotatedTetro = matrix.map((_, index) => \r\n            matrix.map(col => col[index]),\r\n        )\r\n        // reverse each row to get a rotated matrix\r\n        if (dir > 0) return rotatedTetro.map(row => row.reverse())\r\n        return rotatedTetro.reverse()\r\n    }\r\n\r\n    const playerRotate = (stage, dir) => {\r\n        const clonedPlayer = JSON.parse(JSON.stringify(player))\r\n        clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir)\r\n        const pos = clonedPlayer.pos.x\r\n        let offset = 1\r\n        while(checkCollision(clonedPlayer, stage, {x: 0, y: 0})) {\r\n            clonedPlayer.pos.x += offset\r\n            offset = -(offset + (offset > 0 ? 1 : -1))\r\n            if (offset > clonedPlayer.tetromino[0].length) {\r\n                rotate(clonedPlayer.tetromino, -dir)\r\n                clonedPlayer.pos.x = pos\r\n                return\r\n            }\r\n        }\r\n        setPlayer(clonedPlayer)\r\n    }\r\n\r\n    const updatePlayerPos = ({x, y, collided}) => {\r\n        setPlayer(prev => ({\r\n            ...prev,\r\n            pos: {x: (prev.pos.x += x), y: (prev.pos.y += y)},\r\n            collided,\r\n        }))\r\n    }\r\n\r\n    const resetPlayer = useCallback(() => {\r\n        setPlayer({\r\n            pos: {x: STAGE_WIDTH / 2-2, y: 0},\r\n            tetromino: randomTetromino().shape,\r\n            collided: false,\r\n        })\r\n    }, [])\r\n\r\n    return [player, updatePlayerPos, resetPlayer, playerRotate]\r\n}","import { useEffect, useState, useCallback } from 'react';\r\n\r\nexport const useGameStatus = rowsCleared => {\r\n    const [score, setScore] = useState(0)\r\n    const [rows, setRows] = useState(0)\r\n    const [level, setLevel] = useState(0)\r\n\r\n    const linePoints = [40, 100, 300, 1200]\r\n\r\n    const calcScore = useCallback(() => {\r\n        // We have score\r\n        if (rowsCleared > 0) {\r\n            // This is original Tetric score calculating\r\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1))\r\n            setRows(prev => prev + rowsCleared)\r\n        }\r\n    }, [level, linePoints, rowsCleared])\r\n\r\n    useEffect(() => {\r\n        calcScore()\r\n    }, [calcScore, rowsCleared, score])\r\n\r\n    return [score, setScore, rows, setRows, level, setLevel]\r\n}","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react'\nimport Tetris from './components/Tetris'\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n)\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}